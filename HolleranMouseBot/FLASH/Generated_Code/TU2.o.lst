   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.ChannelDevice,"a",%progbits
  18              		.align	2
  21              	ChannelDevice:
  22 0000 03       		.byte	3
  23 0001 01       		.byte	1
  24 0002 0000     		.section	.rodata.ChannelMode,"a",%progbits
  25              		.align	2
  28              	ChannelMode:
  29 0000 0000     		.space	2
  30 0002 0000     		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  31              		.align	2
  34              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  35 0000 00000000 		.space	8
  35      00000000 
  36              		.section	.text.TU2_Init,"ax",%progbits
  37              		.align	2
  38              		.global	TU2_Init
  39              		.code	16
  40              		.thumb_func
  42              	TU2_Init:
  43              	.LFB0:
  44              		.file 1 "../Generated_Code/TU2.c"
   1:../Generated_Code/TU2.c **** /* ###################################################################
   2:../Generated_Code/TU2.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU2.c **** **     Filename    : TU2.c
   4:../Generated_Code/TU2.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU2.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU2.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU2.c **** **     Version     : Component 01.164, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/TU2.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU2.c **** **     Date/Time   : 2014-11-15, 18:04, # CodeGen: 88
  10:../Generated_Code/TU2.c **** **     Abstract    :
  11:../Generated_Code/TU2.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU2.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU2.c **** **     Settings    :
  14:../Generated_Code/TU2.c **** **          Component name                                 : TU2
  15:../Generated_Code/TU2.c **** **          Module name                                    : TPM0
  16:../Generated_Code/TU2.c **** **          Counter                                        : TPM0_CNT
  17:../Generated_Code/TU2.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU2.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU2.c **** **          Value type                                     : uint16_t
  20:../Generated_Code/TU2.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU2.c **** **            Counter frequency                            : Auto select
  22:../Generated_Code/TU2.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU2.c **** **            Period device                                : TPM0_MOD
  24:../Generated_Code/TU2.c **** **            Period                                       : 22 ms
  25:../Generated_Code/TU2.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/TU2.c **** **          Channel list                                   : 2
  27:../Generated_Code/TU2.c **** **            Channel 0                                    : 
  28:../Generated_Code/TU2.c **** **              Mode                                       : Compare
  29:../Generated_Code/TU2.c **** **                Compare                                  : TPM0_C3V
  30:../Generated_Code/TU2.c **** **                Offset                                   : 20500 µs
  31:../Generated_Code/TU2.c **** **                Output on compare                        : Set
  32:../Generated_Code/TU2.c **** **                  Output on overrun                      : Clear
  33:../Generated_Code/TU2.c **** **                  Initial state                          : Low
  34:../Generated_Code/TU2.c **** **                  Output pin                             : PTD3/SPI0_MISO/UART2_TX/TPM0_CH3/SPI0_
  35:../Generated_Code/TU2.c **** **                  Output pin signal                      : 
  36:../Generated_Code/TU2.c **** **                Interrupt                                : Disabled
  37:../Generated_Code/TU2.c **** **            Channel 1                                    : 
  38:../Generated_Code/TU2.c **** **              Mode                                       : Compare
  39:../Generated_Code/TU2.c **** **                Compare                                  : TPM0_C1V
  40:../Generated_Code/TU2.c **** **                Offset                                   : 20500 µs
  41:../Generated_Code/TU2.c **** **                Output on compare                        : Set
  42:../Generated_Code/TU2.c **** **                  Output on overrun                      : Clear
  43:../Generated_Code/TU2.c **** **                  Initial state                          : Low
  44:../Generated_Code/TU2.c **** **                  Output pin                             : ADC0_SE5b/PTD1/SPI0_SCK/TPM0_CH1
  45:../Generated_Code/TU2.c **** **                  Output pin signal                      : 
  46:../Generated_Code/TU2.c **** **                Interrupt                                : Disabled
  47:../Generated_Code/TU2.c **** **          Initialization                                 : 
  48:../Generated_Code/TU2.c **** **            Enabled in init. code                        : yes
  49:../Generated_Code/TU2.c **** **            Auto initialization                          : no
  50:../Generated_Code/TU2.c **** **            Event mask                                   : 
  51:../Generated_Code/TU2.c **** **              OnCounterRestart                           : Disabled
  52:../Generated_Code/TU2.c **** **              OnChannel0                                 : Disabled
  53:../Generated_Code/TU2.c **** **              OnChannel1                                 : Disabled
  54:../Generated_Code/TU2.c **** **              OnChannel2                                 : Disabled
  55:../Generated_Code/TU2.c **** **              OnChannel3                                 : Disabled
  56:../Generated_Code/TU2.c **** **              OnChannel4                                 : Disabled
  57:../Generated_Code/TU2.c **** **              OnChannel5                                 : Disabled
  58:../Generated_Code/TU2.c **** **              OnChannel6                                 : Disabled
  59:../Generated_Code/TU2.c **** **              OnChannel7                                 : Disabled
  60:../Generated_Code/TU2.c **** **          CPU clock/configuration selection              : 
  61:../Generated_Code/TU2.c **** **            Clock configuration 0                        : This component enabled
  62:../Generated_Code/TU2.c **** **            Clock configuration 1                        : This component disabled
  63:../Generated_Code/TU2.c **** **            Clock configuration 2                        : This component disabled
  64:../Generated_Code/TU2.c **** **            Clock configuration 3                        : This component disabled
  65:../Generated_Code/TU2.c **** **            Clock configuration 4                        : This component disabled
  66:../Generated_Code/TU2.c **** **            Clock configuration 5                        : This component disabled
  67:../Generated_Code/TU2.c **** **            Clock configuration 6                        : This component disabled
  68:../Generated_Code/TU2.c **** **            Clock configuration 7                        : This component disabled
  69:../Generated_Code/TU2.c **** **     Contents    :
  70:../Generated_Code/TU2.c **** **         Init               - LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr);
  71:../Generated_Code/TU2.c **** **         GetPeriodTicks     - LDD_TError TU2_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU2_T
  72:../Generated_Code/TU2.c **** **         GetCounterValue    - TU2_TValueType TU2_GetCounterValue(LDD_TDeviceData *DeviceDataPtr);
  73:../Generated_Code/TU2.c **** **         SetOffsetTicks     - LDD_TError TU2_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  74:../Generated_Code/TU2.c **** **         GetOffsetTicks     - LDD_TError TU2_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8
  75:../Generated_Code/TU2.c **** **         SelectOutputAction - LDD_TError TU2_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, u
  76:../Generated_Code/TU2.c **** **
  77:../Generated_Code/TU2.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  78:../Generated_Code/TU2.c **** **     All Rights Reserved.
  79:../Generated_Code/TU2.c **** **     
  80:../Generated_Code/TU2.c **** **     Redistribution and use in source and binary forms, with or without modification,
  81:../Generated_Code/TU2.c **** **     are permitted provided that the following conditions are met:
  82:../Generated_Code/TU2.c **** **     
  83:../Generated_Code/TU2.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  84:../Generated_Code/TU2.c **** **       of conditions and the following disclaimer.
  85:../Generated_Code/TU2.c **** **     
  86:../Generated_Code/TU2.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  87:../Generated_Code/TU2.c **** **       list of conditions and the following disclaimer in the documentation and/or
  88:../Generated_Code/TU2.c **** **       other materials provided with the distribution.
  89:../Generated_Code/TU2.c **** **     
  90:../Generated_Code/TU2.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  91:../Generated_Code/TU2.c **** **       contributors may be used to endorse or promote products derived from this
  92:../Generated_Code/TU2.c **** **       software without specific prior written permission.
  93:../Generated_Code/TU2.c **** **     
  94:../Generated_Code/TU2.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  95:../Generated_Code/TU2.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  96:../Generated_Code/TU2.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  97:../Generated_Code/TU2.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  98:../Generated_Code/TU2.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  99:../Generated_Code/TU2.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 100:../Generated_Code/TU2.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 101:../Generated_Code/TU2.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 102:../Generated_Code/TU2.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 103:../Generated_Code/TU2.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 104:../Generated_Code/TU2.c **** **     
 105:../Generated_Code/TU2.c **** **     http: www.freescale.com
 106:../Generated_Code/TU2.c **** **     mail: support@freescale.com
 107:../Generated_Code/TU2.c **** ** ###################################################################*/
 108:../Generated_Code/TU2.c **** /*!
 109:../Generated_Code/TU2.c **** ** @file TU2.c
 110:../Generated_Code/TU2.c **** ** @version 01.11
 111:../Generated_Code/TU2.c **** ** @brief
 112:../Generated_Code/TU2.c **** **          This TimerUnit component provides a low level API for unified hardware access across
 113:../Generated_Code/TU2.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
 114:../Generated_Code/TU2.c **** */         
 115:../Generated_Code/TU2.c **** /*!
 116:../Generated_Code/TU2.c **** **  @addtogroup TU2_module TU2 module documentation
 117:../Generated_Code/TU2.c **** **  @{
 118:../Generated_Code/TU2.c **** */         
 119:../Generated_Code/TU2.c **** 
 120:../Generated_Code/TU2.c **** /* MODULE TU2. */
 121:../Generated_Code/TU2.c **** 
 122:../Generated_Code/TU2.c **** #include "TU2.h"
 123:../Generated_Code/TU2.c **** /* {Default RTOS Adapter} No RTOS includes */
 124:../Generated_Code/TU2.c **** #include "IO_Map.h"
 125:../Generated_Code/TU2.c **** 
 126:../Generated_Code/TU2.c **** #ifdef __cplusplus
 127:../Generated_Code/TU2.c **** extern "C" {
 128:../Generated_Code/TU2.c **** #endif 
 129:../Generated_Code/TU2.c **** 
 130:../Generated_Code/TU2.c **** /* List of channels used by component */
 131:../Generated_Code/TU2.c **** static const uint8_t ChannelDevice[TU2_NUMBER_OF_CHANNELS] = {0x03U,0x01U};
 132:../Generated_Code/TU2.c **** 
 133:../Generated_Code/TU2.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
 134:../Generated_Code/TU2.c **** static const uint8_t ChannelMode[TU2_NUMBER_OF_CHANNELS] = {0x00U,0x00U};
 135:../Generated_Code/TU2.c **** 
 136:../Generated_Code/TU2.c **** 
 137:../Generated_Code/TU2.c **** typedef struct {
 138:../Generated_Code/TU2.c ****   uint8_t InitCntr;                    /* Number of initialization */
 139:../Generated_Code/TU2.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 140:../Generated_Code/TU2.c **** } TU2_TDeviceData;
 141:../Generated_Code/TU2.c **** 
 142:../Generated_Code/TU2.c **** typedef TU2_TDeviceData *TU2_TDeviceDataPtr; /* Pointer to the device data structure. */
 143:../Generated_Code/TU2.c **** 
 144:../Generated_Code/TU2.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 145:../Generated_Code/TU2.c **** static TU2_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 146:../Generated_Code/TU2.c **** 
 147:../Generated_Code/TU2.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(TU2_CHANNEL_0_PIN | TU2_CHANNEL_1_PIN)
 148:../Generated_Code/TU2.c **** #define LAST_CHANNEL 0x01U
 149:../Generated_Code/TU2.c **** 
 150:../Generated_Code/TU2.c **** /* Internal method prototypes */
 151:../Generated_Code/TU2.c **** /*
 152:../Generated_Code/TU2.c **** ** ===================================================================
 153:../Generated_Code/TU2.c **** **     Method      :  TU2_Init (component TimerUnit_LDD)
 154:../Generated_Code/TU2.c **** */
 155:../Generated_Code/TU2.c **** /*!
 156:../Generated_Code/TU2.c **** **     @brief
 157:../Generated_Code/TU2.c **** **         Initializes the device. Allocates memory for the device data
 158:../Generated_Code/TU2.c **** **         structure, allocates interrupt vectors and sets interrupt
 159:../Generated_Code/TU2.c **** **         priority, sets pin routing, sets timing, etc. If the
 160:../Generated_Code/TU2.c **** **         property ["Enable in init. code"] is set to "yes" value then
 161:../Generated_Code/TU2.c **** **         the device is also enabled (see the description of the
 162:../Generated_Code/TU2.c **** **         [Enable] method). In this case the [Enable] method is not
 163:../Generated_Code/TU2.c **** **         necessary and needn't to be generated. This method can be
 164:../Generated_Code/TU2.c **** **         called only once. Before the second call of Init the [Deinit]
 165:../Generated_Code/TU2.c **** **         must be called first.
 166:../Generated_Code/TU2.c **** **     @param
 167:../Generated_Code/TU2.c **** **         UserDataPtr     - Pointer to the user or
 168:../Generated_Code/TU2.c **** **                           RTOS specific data. This pointer will be
 169:../Generated_Code/TU2.c **** **                           passed as an event or callback parameter.
 170:../Generated_Code/TU2.c **** **     @return
 171:../Generated_Code/TU2.c **** **                         - Pointer to the dynamically allocated private
 172:../Generated_Code/TU2.c **** **                           structure or NULL if there was an error.
 173:../Generated_Code/TU2.c **** */
 174:../Generated_Code/TU2.c **** /* ===================================================================*/
 175:../Generated_Code/TU2.c **** LDD_TDeviceData* TU2_Init(LDD_TUserData *UserDataPtr)
 176:../Generated_Code/TU2.c **** {
  45              		.loc 1 176 0
  46              		.cfi_startproc
  47 0000 80B5     		push	{r7, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 84B0     		sub	sp, sp, #16
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 24
  55 0004 00AF     		add	r7, sp, #0
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 7
  58 0006 7860     		str	r0, [r7, #4]
 177:../Generated_Code/TU2.c ****   TU2_TDeviceData *DeviceDataPrv;
 178:../Generated_Code/TU2.c **** 
 179:../Generated_Code/TU2.c ****   if (PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID] == NULL) {
  59              		.loc 1 179 0
  60 0008 334B     		ldr	r3, .L4
  61 000a DB68     		ldr	r3, [r3, #12]
  62 000c 002B     		cmp	r3, #0
  63 000e 51D1     		bne	.L2
 180:../Generated_Code/TU2.c ****     /* Allocate device structure */
 181:../Generated_Code/TU2.c ****     /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointe
 182:../Generated_Code/TU2.c ****     DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  64              		.loc 1 182 0
  65 0010 324B     		ldr	r3, .L4+4
  66 0012 FB60     		str	r3, [r7, #12]
 183:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  67              		.loc 1 183 0
  68 0014 FB68     		ldr	r3, [r7, #12]
  69 0016 7A68     		ldr	r2, [r7, #4]
  70 0018 5A60     		str	r2, [r3, #4]
 184:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr = 1U;      /* First initialization */
  71              		.loc 1 184 0
  72 001a FB68     		ldr	r3, [r7, #12]
  73 001c 0122     		mov	r2, #1
  74 001e 1A70     		strb	r2, [r3]
 185:../Generated_Code/TU2.c ****   }
 186:../Generated_Code/TU2.c ****   else {
 187:../Generated_Code/TU2.c ****     /* Memory is already allocated */
 188:../Generated_Code/TU2.c ****     DeviceDataPrv = (TU2_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
 189:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 190:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 191:../Generated_Code/TU2.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 192:../Generated_Code/TU2.c ****   }
 193:../Generated_Code/TU2.c ****   /* SIM_SCGC6: TPM0=1 */
 194:../Generated_Code/TU2.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM0_MASK;
  75              		.loc 1 194 0
  76 0020 2F4A     		ldr	r2, .L4+8
  77 0022 2F49     		ldr	r1, .L4+8
  78 0024 2F4B     		ldr	r3, .L4+12
  79 0026 CB58     		ldr	r3, [r1, r3]
  80 0028 8021     		mov	r1, #128
  81 002a 4904     		lsl	r1, r1, #17
  82 002c 1943     		orr	r1, r3
  83 002e 2D4B     		ldr	r3, .L4+12
  84 0030 D150     		str	r1, [r2, r3]
 195:../Generated_Code/TU2.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 196:../Generated_Code/TU2.c ****   TPM0_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
  85              		.loc 1 196 0
  86 0032 2D4B     		ldr	r3, .L4+16
  87 0034 0022     		mov	r2, #0
  88 0036 1A60     		str	r2, [r3]
 197:../Generated_Code/TU2.c ****   /* TPM0_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 198:../Generated_Code/TU2.c ****   TPM0_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
  89              		.loc 1 198 0
  90 0038 2B4B     		ldr	r3, .L4+16
  91 003a 0022     		mov	r2, #0
  92 003c 5A60     		str	r2, [r3, #4]
 199:../Generated_Code/TU2.c ****   /* TPM0_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 200:../Generated_Code/TU2.c ****   TPM0_C0SC = 0x00U;                   /* Clear channel status and control register */
  93              		.loc 1 200 0
  94 003e 2A4B     		ldr	r3, .L4+16
  95 0040 0022     		mov	r2, #0
  96 0042 DA60     		str	r2, [r3, #12]
 201:../Generated_Code/TU2.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 202:../Generated_Code/TU2.c ****   TPM0_C1SC = 0x00U;                   /* Clear channel status and control register */
  97              		.loc 1 202 0
  98 0044 284B     		ldr	r3, .L4+16
  99 0046 0022     		mov	r2, #0
 100 0048 5A61     		str	r2, [r3, #20]
 203:../Generated_Code/TU2.c ****   /* TPM0_C2SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 204:../Generated_Code/TU2.c ****   TPM0_C2SC = 0x00U;                   /* Clear channel status and control register */
 101              		.loc 1 204 0
 102 004a 274B     		ldr	r3, .L4+16
 103 004c 0022     		mov	r2, #0
 104 004e DA61     		str	r2, [r3, #28]
 205:../Generated_Code/TU2.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 206:../Generated_Code/TU2.c ****   TPM0_C3SC = 0x00U;                   /* Clear channel status and control register */
 105              		.loc 1 206 0
 106 0050 254B     		ldr	r3, .L4+16
 107 0052 0022     		mov	r2, #0
 108 0054 5A62     		str	r2, [r3, #36]
 207:../Generated_Code/TU2.c ****   /* TPM0_C4SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 208:../Generated_Code/TU2.c ****   TPM0_C4SC = 0x00U;                   /* Clear channel status and control register */
 109              		.loc 1 208 0
 110 0056 244B     		ldr	r3, .L4+16
 111 0058 0022     		mov	r2, #0
 112 005a DA62     		str	r2, [r3, #44]
 209:../Generated_Code/TU2.c ****   /* TPM0_C5SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 210:../Generated_Code/TU2.c ****   TPM0_C5SC = 0x00U;                   /* Clear channel status and control register */
 113              		.loc 1 210 0
 114 005c 224B     		ldr	r3, .L4+16
 115 005e 0022     		mov	r2, #0
 116 0060 5A63     		str	r2, [r3, #52]
 211:../Generated_Code/TU2.c ****   /* TPM0_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 212:../Generated_Code/TU2.c ****   TPM0_MOD = TPM_MOD_MOD(0xFFFF);      /* Set up modulo register */
 117              		.loc 1 212 0
 118 0062 214B     		ldr	r3, .L4+16
 119 0064 214A     		ldr	r2, .L4+20
 120 0066 9A60     		str	r2, [r3, #8]
 213:../Generated_Code/TU2.c ****   /* TPM0_C3SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 214:../Generated_Code/TU2.c ****   TPM0_C3SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 121              		.loc 1 214 0
 122 0068 1F4B     		ldr	r3, .L4+16
 123 006a 2C22     		mov	r2, #44
 124 006c 5A62     		str	r2, [r3, #36]
 215:../Generated_Code/TU2.c ****   /* TPM0_C3V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 216:../Generated_Code/TU2.c ****   TPM0_C3V = TPM_CnV_VAL(0xF03C);      /* Set up channel value register */
 125              		.loc 1 216 0
 126 006e 1E4B     		ldr	r3, .L4+16
 127 0070 1F4A     		ldr	r2, .L4+24
 128 0072 9A62     		str	r2, [r3, #40]
 217:../Generated_Code/TU2.c ****   /* TPM0_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 218:../Generated_Code/TU2.c ****   TPM0_C1SC = (TPM_CnSC_MSB_MASK | TPM_CnSC_ELSB_MASK | TPM_CnSC_ELSA_MASK); /* Set up channel stat
 129              		.loc 1 218 0
 130 0074 1C4B     		ldr	r3, .L4+16
 131 0076 2C22     		mov	r2, #44
 132 0078 5A61     		str	r2, [r3, #20]
 219:../Generated_Code/TU2.c ****   /* TPM0_C1V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 220:../Generated_Code/TU2.c ****   TPM0_C1V = TPM_CnV_VAL(0xF03C);      /* Set up channel value register */
 133              		.loc 1 220 0
 134 007a 1B4B     		ldr	r3, .L4+16
 135 007c 1C4A     		ldr	r2, .L4+24
 136 007e 9A61     		str	r2, [r3, #24]
 221:../Generated_Code/TU2.c ****   /* PORTD_PCR3: ISF=0,MUX=4 */
 222:../Generated_Code/TU2.c ****   PORTD_PCR3 = (uint32_t)((PORTD_PCR3 & (uint32_t)~(uint32_t)(
 137              		.loc 1 222 0
 138 0080 1C4B     		ldr	r3, .L4+28
 139 0082 1C4A     		ldr	r2, .L4+28
 140 0084 D168     		ldr	r1, [r2, #12]
 141 0086 1C4A     		ldr	r2, .L4+32
 142 0088 0A40     		and	r2, r1
 143 008a 8021     		mov	r1, #128
 144 008c C900     		lsl	r1, r1, #3
 145 008e 0A43     		orr	r2, r1
 146 0090 DA60     		str	r2, [r3, #12]
 223:../Generated_Code/TU2.c ****                 PORT_PCR_ISF_MASK |
 224:../Generated_Code/TU2.c ****                 PORT_PCR_MUX(0x03)
 225:../Generated_Code/TU2.c ****                )) | (uint32_t)(
 226:../Generated_Code/TU2.c ****                 PORT_PCR_MUX(0x04)
 227:../Generated_Code/TU2.c ****                ));
 228:../Generated_Code/TU2.c ****   /* PORTD_PCR1: ISF=0,MUX=4 */
 229:../Generated_Code/TU2.c ****   PORTD_PCR1 = (uint32_t)((PORTD_PCR1 & (uint32_t)~(uint32_t)(
 147              		.loc 1 229 0
 148 0092 184B     		ldr	r3, .L4+28
 149 0094 174A     		ldr	r2, .L4+28
 150 0096 5168     		ldr	r1, [r2, #4]
 151 0098 174A     		ldr	r2, .L4+32
 152 009a 0A40     		and	r2, r1
 153 009c 8021     		mov	r1, #128
 154 009e C900     		lsl	r1, r1, #3
 155 00a0 0A43     		orr	r2, r1
 156 00a2 5A60     		str	r2, [r3, #4]
 230:../Generated_Code/TU2.c ****                 PORT_PCR_ISF_MASK |
 231:../Generated_Code/TU2.c ****                 PORT_PCR_MUX(0x03)
 232:../Generated_Code/TU2.c ****                )) | (uint32_t)(
 233:../Generated_Code/TU2.c ****                 PORT_PCR_MUX(0x04)
 234:../Generated_Code/TU2.c ****                ));
 235:../Generated_Code/TU2.c ****   /* TPM0_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 236:../Generated_Code/TU2.c ****   TPM0_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x03)); /* Set up status and control register */
 157              		.loc 1 236 0
 158 00a4 104B     		ldr	r3, .L4+16
 159 00a6 0B22     		mov	r2, #11
 160 00a8 1A60     		str	r2, [r3]
 237:../Generated_Code/TU2.c ****   /* Registration of the device structure */
 238:../Generated_Code/TU2.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU2_ID,DeviceDataPrv);
 161              		.loc 1 238 0
 162 00aa 0B4B     		ldr	r3, .L4
 163 00ac FA68     		ldr	r2, [r7, #12]
 164 00ae DA60     		str	r2, [r3, #12]
 239:../Generated_Code/TU2.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 165              		.loc 1 239 0
 166 00b0 FB68     		ldr	r3, [r7, #12]
 167 00b2 0CE0     		b	.L3
 168              	.L2:
 188:../Generated_Code/TU2.c ****     DeviceDataPrv = (TU2_TDeviceDataPtr) PE_LDD_DeviceDataList[PE_LDD_COMPONENT_TU2_ID];
 169              		.loc 1 188 0
 170 00b4 084B     		ldr	r3, .L4
 171 00b6 DB68     		ldr	r3, [r3, #12]
 172 00b8 FB60     		str	r3, [r7, #12]
 189:../Generated_Code/TU2.c ****     DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
 173              		.loc 1 189 0
 174 00ba FB68     		ldr	r3, [r7, #12]
 175 00bc 7A68     		ldr	r2, [r7, #4]
 176 00be 5A60     		str	r2, [r3, #4]
 190:../Generated_Code/TU2.c ****     DeviceDataPrv->InitCntr++;         /* Increment counter of initialization */
 177              		.loc 1 190 0
 178 00c0 FB68     		ldr	r3, [r7, #12]
 179 00c2 1B78     		ldrb	r3, [r3]
 180 00c4 0133     		add	r3, r3, #1
 181 00c6 DAB2     		uxtb	r2, r3
 182 00c8 FB68     		ldr	r3, [r7, #12]
 183 00ca 1A70     		strb	r2, [r3]
 191:../Generated_Code/TU2.c ****     return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 184              		.loc 1 191 0
 185 00cc FB68     		ldr	r3, [r7, #12]
 186              	.L3:
 240:../Generated_Code/TU2.c **** }
 187              		.loc 1 240 0
 188 00ce 181C     		mov	r0, r3
 189 00d0 BD46     		mov	sp, r7
 190 00d2 04B0     		add	sp, sp, #16
 191              		@ sp needed for prologue
 192 00d4 80BD     		pop	{r7, pc}
 193              	.L5:
 194 00d6 C046     		.align	2
 195              	.L4:
 196 00d8 00000000 		.word	PE_LDD_DeviceDataList
 197 00dc 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 198 00e0 00700440 		.word	1074032640
 199 00e4 3C100000 		.word	4156
 200 00e8 00800340 		.word	1073971200
 201 00ec FFFF0000 		.word	65535
 202 00f0 3CF00000 		.word	61500
 203 00f4 00C00440 		.word	1074053120
 204 00f8 FFF8FFFE 		.word	-16779009
 205              		.cfi_endproc
 206              	.LFE0:
 208              		.section	.text.TU2_GetPeriodTicks,"ax",%progbits
 209              		.align	2
 210              		.global	TU2_GetPeriodTicks
 211              		.code	16
 212              		.thumb_func
 214              	TU2_GetPeriodTicks:
 215              	.LFB1:
 241:../Generated_Code/TU2.c **** 
 242:../Generated_Code/TU2.c **** /*
 243:../Generated_Code/TU2.c **** ** ===================================================================
 244:../Generated_Code/TU2.c **** **     Method      :  TU2_GetPeriodTicks (component TimerUnit_LDD)
 245:../Generated_Code/TU2.c **** */
 246:../Generated_Code/TU2.c **** /*!
 247:../Generated_Code/TU2.c **** **     @brief
 248:../Generated_Code/TU2.c **** **         Returns the number of counter ticks before re-initialization.
 249:../Generated_Code/TU2.c **** **         See also method [SetPeriodTicks]. This method is available
 250:../Generated_Code/TU2.c **** **         only if the property ["Counter restart"] is switched to
 251:../Generated_Code/TU2.c **** **         'on-match' value.
 252:../Generated_Code/TU2.c **** **     @param
 253:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 254:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 255:../Generated_Code/TU2.c **** **     @param
 256:../Generated_Code/TU2.c **** **         TicksPtr        - Pointer to return value of the
 257:../Generated_Code/TU2.c **** **                           number of counter ticks before
 258:../Generated_Code/TU2.c **** **                           re-initialization
 259:../Generated_Code/TU2.c **** **     @return
 260:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 261:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 262:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 263:../Generated_Code/TU2.c **** **                           the active clock configuration
 264:../Generated_Code/TU2.c **** */
 265:../Generated_Code/TU2.c **** /* ===================================================================*/
 266:../Generated_Code/TU2.c **** LDD_TError TU2_GetPeriodTicks(LDD_TDeviceData *DeviceDataPtr, TU2_TValueType *TicksPtr)
 267:../Generated_Code/TU2.c **** {
 216              		.loc 1 267 0
 217              		.cfi_startproc
 218 0000 80B5     		push	{r7, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 84B0     		sub	sp, sp, #16
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 24
 226 0004 00AF     		add	r7, sp, #0
 227              	.LCFI5:
 228              		.cfi_def_cfa_register 7
 229 0006 7860     		str	r0, [r7, #4]
 230 0008 3960     		str	r1, [r7]
 268:../Generated_Code/TU2.c ****   uint16_t tmp;
 269:../Generated_Code/TU2.c **** 
 270:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 271:../Generated_Code/TU2.c ****   tmp = (uint16_t)(TPM_PDD_ReadModuloReg(TPM0_BASE_PTR));
 231              		.loc 1 271 0
 232 000a 0B4B     		ldr	r3, .L8
 233 000c 9A68     		ldr	r2, [r3, #8]
 234 000e 3B1C     		mov	r3, r7
 235 0010 0E33     		add	r3, r3, #14
 236 0012 1A80     		strh	r2, [r3]
 272:../Generated_Code/TU2.c ****   *TicksPtr = (TU2_TValueType)++tmp;
 237              		.loc 1 272 0
 238 0014 3B1C     		mov	r3, r7
 239 0016 0E33     		add	r3, r3, #14
 240 0018 3A1C     		mov	r2, r7
 241 001a 0E32     		add	r2, r2, #14
 242 001c 1288     		ldrh	r2, [r2]
 243 001e 0132     		add	r2, r2, #1
 244 0020 1A80     		strh	r2, [r3]
 245 0022 3B68     		ldr	r3, [r7]
 246 0024 3A1C     		mov	r2, r7
 247 0026 0E32     		add	r2, r2, #14
 248 0028 1288     		ldrh	r2, [r2]
 249 002a 1A80     		strh	r2, [r3]
 273:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 250              		.loc 1 273 0
 251 002c 0023     		mov	r3, #0
 274:../Generated_Code/TU2.c **** }
 252              		.loc 1 274 0
 253 002e 181C     		mov	r0, r3
 254 0030 BD46     		mov	sp, r7
 255 0032 04B0     		add	sp, sp, #16
 256              		@ sp needed for prologue
 257 0034 80BD     		pop	{r7, pc}
 258              	.L9:
 259 0036 C046     		.align	2
 260              	.L8:
 261 0038 00800340 		.word	1073971200
 262              		.cfi_endproc
 263              	.LFE1:
 265              		.section	.text.TU2_GetCounterValue,"ax",%progbits
 266              		.align	2
 267              		.global	TU2_GetCounterValue
 268              		.code	16
 269              		.thumb_func
 271              	TU2_GetCounterValue:
 272              	.LFB2:
 275:../Generated_Code/TU2.c **** 
 276:../Generated_Code/TU2.c **** /*
 277:../Generated_Code/TU2.c **** ** ===================================================================
 278:../Generated_Code/TU2.c **** **     Method      :  TU2_GetCounterValue (component TimerUnit_LDD)
 279:../Generated_Code/TU2.c **** */
 280:../Generated_Code/TU2.c **** /*!
 281:../Generated_Code/TU2.c **** **     @brief
 282:../Generated_Code/TU2.c **** **         Returns the content of counter register. This method can be
 283:../Generated_Code/TU2.c **** **         used both if counter is enabled and if counter is disabled.
 284:../Generated_Code/TU2.c **** **         The method is not available if HW doesn't allow reading of
 285:../Generated_Code/TU2.c **** **         the counter.
 286:../Generated_Code/TU2.c **** **     @param
 287:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 288:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 289:../Generated_Code/TU2.c **** **     @return
 290:../Generated_Code/TU2.c **** **                         - Counter value (number of counted ticks).
 291:../Generated_Code/TU2.c **** */
 292:../Generated_Code/TU2.c **** /* ===================================================================*/
 293:../Generated_Code/TU2.c **** TU2_TValueType TU2_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 294:../Generated_Code/TU2.c **** {
 273              		.loc 1 294 0
 274              		.cfi_startproc
 275 0000 80B5     		push	{r7, lr}
 276              	.LCFI6:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 7, -8
 279              		.cfi_offset 14, -4
 280 0002 82B0     		sub	sp, sp, #8
 281              	.LCFI7:
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              	.LCFI8:
 285              		.cfi_def_cfa_register 7
 286 0006 7860     		str	r0, [r7, #4]
 295:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 296:../Generated_Code/TU2.c ****   return (TU2_TValueType)TPM_PDD_ReadCounterReg(TPM0_BASE_PTR);
 287              		.loc 1 296 0
 288 0008 034B     		ldr	r3, .L12
 289 000a 5B68     		ldr	r3, [r3, #4]
 290 000c 9BB2     		uxth	r3, r3
 297:../Generated_Code/TU2.c **** }
 291              		.loc 1 297 0
 292 000e 181C     		mov	r0, r3
 293 0010 BD46     		mov	sp, r7
 294 0012 02B0     		add	sp, sp, #8
 295              		@ sp needed for prologue
 296 0014 80BD     		pop	{r7, pc}
 297              	.L13:
 298 0016 C046     		.align	2
 299              	.L12:
 300 0018 00800340 		.word	1073971200
 301              		.cfi_endproc
 302              	.LFE2:
 304              		.section	.text.TU2_SetOffsetTicks,"ax",%progbits
 305              		.align	2
 306              		.global	TU2_SetOffsetTicks
 307              		.code	16
 308              		.thumb_func
 310              	TU2_SetOffsetTicks:
 311              	.LFB3:
 298:../Generated_Code/TU2.c **** 
 299:../Generated_Code/TU2.c **** /*
 300:../Generated_Code/TU2.c **** ** ===================================================================
 301:../Generated_Code/TU2.c **** **     Method      :  TU2_SetOffsetTicks (component TimerUnit_LDD)
 302:../Generated_Code/TU2.c **** */
 303:../Generated_Code/TU2.c **** /*!
 304:../Generated_Code/TU2.c **** **     @brief
 305:../Generated_Code/TU2.c **** **         Sets the new offset value to channel specified by the
 306:../Generated_Code/TU2.c **** **         parameter ChannelIdx. It is user responsibility to use value
 307:../Generated_Code/TU2.c **** **         below selected period. This method is available when at
 308:../Generated_Code/TU2.c **** **         least one channel is configured.
 309:../Generated_Code/TU2.c **** **     @param
 310:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 311:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 312:../Generated_Code/TU2.c **** **     @param
 313:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 314:../Generated_Code/TU2.c **** **                           channel.
 315:../Generated_Code/TU2.c **** **     @param
 316:../Generated_Code/TU2.c **** **         Ticks           - Number of counter ticks to compare
 317:../Generated_Code/TU2.c **** **                           match.
 318:../Generated_Code/TU2.c **** **     @return
 319:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 320:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 321:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 322:../Generated_Code/TU2.c **** **                           out of possible range.
 323:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 324:../Generated_Code/TU2.c **** **                           selected for selected channel
 325:../Generated_Code/TU2.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 326:../Generated_Code/TU2.c **** **                           possible range.
 327:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 328:../Generated_Code/TU2.c **** **                           the active clock configuration
 329:../Generated_Code/TU2.c **** */
 330:../Generated_Code/TU2.c **** /* ===================================================================*/
 331:../Generated_Code/TU2.c **** LDD_TError TU2_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU2_TValueType Ti
 332:../Generated_Code/TU2.c **** {
 312              		.loc 1 332 0
 313              		.cfi_startproc
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI9:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 82B0     		sub	sp, sp, #8
 320              	.LCFI10:
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              	.LCFI11:
 324              		.cfi_def_cfa_register 7
 325 0006 7860     		str	r0, [r7, #4]
 326 0008 FB1C     		add	r3, r7, #3
 327 000a 1970     		strb	r1, [r3]
 328 000c 3B1C     		mov	r3, r7
 329 000e 1A80     		strh	r2, [r3]
 333:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 334:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 335:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 336:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 330              		.loc 1 336 0
 331 0010 FB1C     		add	r3, r7, #3
 332 0012 1B78     		ldrb	r3, [r3]
 333 0014 012B     		cmp	r3, #1
 334 0016 01D9     		bls	.L15
 337:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 335              		.loc 1 337 0
 336 0018 8223     		mov	r3, #130
 337 001a 13E0     		b	.L16
 338              	.L15:
 338:../Generated_Code/TU2.c ****   }
 339:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 339              		.loc 1 339 0
 340 001c FB1C     		add	r3, r7, #3
 341 001e 1B78     		ldrb	r3, [r3]
 342 0020 0A4A     		ldr	r2, .L18
 343 0022 D35C     		ldrb	r3, [r2, r3]
 344 0024 002B     		cmp	r3, #0
 345 0026 01D0     		beq	.L17
 340:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 346              		.loc 1 340 0
 347 0028 0923     		mov	r3, #9
 348 002a 0BE0     		b	.L16
 349              	.L17:
 341:../Generated_Code/TU2.c ****   }
 342:../Generated_Code/TU2.c ****   TPM_PDD_WriteChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 350              		.loc 1 342 0
 351 002c 0849     		ldr	r1, .L18+4
 352 002e FB1C     		add	r3, r7, #3
 353 0030 1B78     		ldrb	r3, [r3]
 354 0032 084A     		ldr	r2, .L18+8
 355 0034 D35C     		ldrb	r3, [r2, r3]
 356 0036 3A1C     		mov	r2, r7
 357 0038 1288     		ldrh	r2, [r2]
 358 003a 0133     		add	r3, r3, #1
 359 003c DB00     		lsl	r3, r3, #3
 360 003e CB18     		add	r3, r1, r3
 361 0040 9A60     		str	r2, [r3, #8]
 343:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 362              		.loc 1 343 0
 363 0042 0023     		mov	r3, #0
 364              	.L16:
 344:../Generated_Code/TU2.c **** }
 365              		.loc 1 344 0
 366 0044 181C     		mov	r0, r3
 367 0046 BD46     		mov	sp, r7
 368 0048 02B0     		add	sp, sp, #8
 369              		@ sp needed for prologue
 370 004a 80BD     		pop	{r7, pc}
 371              	.L19:
 372              		.align	2
 373              	.L18:
 374 004c 00000000 		.word	ChannelMode
 375 0050 00800340 		.word	1073971200
 376 0054 00000000 		.word	ChannelDevice
 377              		.cfi_endproc
 378              	.LFE3:
 380              		.section	.text.TU2_GetOffsetTicks,"ax",%progbits
 381              		.align	2
 382              		.global	TU2_GetOffsetTicks
 383              		.code	16
 384              		.thumb_func
 386              	TU2_GetOffsetTicks:
 387              	.LFB4:
 345:../Generated_Code/TU2.c **** 
 346:../Generated_Code/TU2.c **** /*
 347:../Generated_Code/TU2.c **** ** ===================================================================
 348:../Generated_Code/TU2.c **** **     Method      :  TU2_GetOffsetTicks (component TimerUnit_LDD)
 349:../Generated_Code/TU2.c **** */
 350:../Generated_Code/TU2.c **** /*!
 351:../Generated_Code/TU2.c **** **     @brief
 352:../Generated_Code/TU2.c **** **         Returns the number of counter ticks to compare match channel
 353:../Generated_Code/TU2.c **** **         specified by the parameter ChannelIdx. See also method
 354:../Generated_Code/TU2.c **** **         [SetOffsetTicks]. This method is available when at least one
 355:../Generated_Code/TU2.c **** **         channel is configured.
 356:../Generated_Code/TU2.c **** **     @param
 357:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 358:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 359:../Generated_Code/TU2.c **** **     @param
 360:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 361:../Generated_Code/TU2.c **** **                           channel.
 362:../Generated_Code/TU2.c **** **     @param
 363:../Generated_Code/TU2.c **** **         TicksPtr        - Pointer to return value of the
 364:../Generated_Code/TU2.c **** **                           number of counter ticks to compare match.
 365:../Generated_Code/TU2.c **** **     @return
 366:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 367:../Generated_Code/TU2.c **** **                           ERR_OK - OK 
 368:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 369:../Generated_Code/TU2.c **** **                           out of possible range.
 370:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 371:../Generated_Code/TU2.c **** **                           selected for selected channel.
 372:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 373:../Generated_Code/TU2.c **** **                           the active clock configuration
 374:../Generated_Code/TU2.c **** */
 375:../Generated_Code/TU2.c **** /* ===================================================================*/
 376:../Generated_Code/TU2.c **** LDD_TError TU2_GetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, TU2_TValueType *T
 377:../Generated_Code/TU2.c **** {
 388              		.loc 1 377 0
 389              		.cfi_startproc
 390 0000 80B5     		push	{r7, lr}
 391              	.LCFI12:
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 84B0     		sub	sp, sp, #16
 396              	.LCFI13:
 397              		.cfi_def_cfa_offset 24
 398 0004 00AF     		add	r7, sp, #0
 399              	.LCFI14:
 400              		.cfi_def_cfa_register 7
 401 0006 F860     		str	r0, [r7, #12]
 402 0008 7A60     		str	r2, [r7, #4]
 403 000a 3B1C     		mov	r3, r7
 404 000c 0B33     		add	r3, r3, #11
 405 000e 0A1C     		add	r2, r1, #0
 406 0010 1A70     		strb	r2, [r3]
 378:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 379:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 380:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 381:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 407              		.loc 1 381 0
 408 0012 3B1C     		mov	r3, r7
 409 0014 0B33     		add	r3, r3, #11
 410 0016 1B78     		ldrb	r3, [r3]
 411 0018 012B     		cmp	r3, #1
 412 001a 01D9     		bls	.L21
 382:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 413              		.loc 1 382 0
 414 001c 8223     		mov	r3, #130
 415 001e 16E0     		b	.L22
 416              	.L21:
 383:../Generated_Code/TU2.c ****   }
 384:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 417              		.loc 1 384 0
 418 0020 3B1C     		mov	r3, r7
 419 0022 0B33     		add	r3, r3, #11
 420 0024 1B78     		ldrb	r3, [r3]
 421 0026 0C4A     		ldr	r2, .L24
 422 0028 D35C     		ldrb	r3, [r2, r3]
 423 002a 002B     		cmp	r3, #0
 424 002c 01D0     		beq	.L23
 385:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 425              		.loc 1 385 0
 426 002e 0923     		mov	r3, #9
 427 0030 0DE0     		b	.L22
 428              	.L23:
 386:../Generated_Code/TU2.c ****   }
 387:../Generated_Code/TU2.c ****   *TicksPtr = (TU2_TValueType)(TPM_PDD_ReadChannelValueReg(TPM0_BASE_PTR, ChannelDevice[ChannelIdx]
 429              		.loc 1 387 0
 430 0032 0A4A     		ldr	r2, .L24+4
 431 0034 3B1C     		mov	r3, r7
 432 0036 0B33     		add	r3, r3, #11
 433 0038 1B78     		ldrb	r3, [r3]
 434 003a 0949     		ldr	r1, .L24+8
 435 003c CB5C     		ldrb	r3, [r1, r3]
 436 003e 0133     		add	r3, r3, #1
 437 0040 DB00     		lsl	r3, r3, #3
 438 0042 D318     		add	r3, r2, r3
 439 0044 9B68     		ldr	r3, [r3, #8]
 440 0046 9AB2     		uxth	r2, r3
 441 0048 7B68     		ldr	r3, [r7, #4]
 442 004a 1A80     		strh	r2, [r3]
 388:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 443              		.loc 1 388 0
 444 004c 0023     		mov	r3, #0
 445              	.L22:
 389:../Generated_Code/TU2.c **** }
 446              		.loc 1 389 0
 447 004e 181C     		mov	r0, r3
 448 0050 BD46     		mov	sp, r7
 449 0052 04B0     		add	sp, sp, #16
 450              		@ sp needed for prologue
 451 0054 80BD     		pop	{r7, pc}
 452              	.L25:
 453 0056 C046     		.align	2
 454              	.L24:
 455 0058 00000000 		.word	ChannelMode
 456 005c 00800340 		.word	1073971200
 457 0060 00000000 		.word	ChannelDevice
 458              		.cfi_endproc
 459              	.LFE4:
 461              		.section	.text.TU2_SelectOutputAction,"ax",%progbits
 462              		.align	2
 463              		.global	TU2_SelectOutputAction
 464              		.code	16
 465              		.thumb_func
 467              	TU2_SelectOutputAction:
 468              	.LFB5:
 390:../Generated_Code/TU2.c **** 
 391:../Generated_Code/TU2.c **** /*
 392:../Generated_Code/TU2.c **** ** ===================================================================
 393:../Generated_Code/TU2.c **** **     Method      :  TU2_SelectOutputAction (component TimerUnit_LDD)
 394:../Generated_Code/TU2.c **** */
 395:../Generated_Code/TU2.c **** /*!
 396:../Generated_Code/TU2.c **** **     @brief
 397:../Generated_Code/TU2.c **** **         Sets the type of compare match and counter overflow action
 398:../Generated_Code/TU2.c **** **         on channel output. This method is available when at least
 399:../Generated_Code/TU2.c **** **         one channel is configured.
 400:../Generated_Code/TU2.c **** **     @param
 401:../Generated_Code/TU2.c **** **         DeviceDataPtr   - Device data structure
 402:../Generated_Code/TU2.c **** **                           pointer returned by [Init] method.
 403:../Generated_Code/TU2.c **** **     @param
 404:../Generated_Code/TU2.c **** **         ChannelIdx      - Index of the component
 405:../Generated_Code/TU2.c **** **                           channel.
 406:../Generated_Code/TU2.c **** **     @param
 407:../Generated_Code/TU2.c **** **         CompareAction   - Select output action
 408:../Generated_Code/TU2.c **** **                           on compare match
 409:../Generated_Code/TU2.c **** **     @param
 410:../Generated_Code/TU2.c **** **         CounterAction   - Select output action
 411:../Generated_Code/TU2.c **** **                           on counter overflow
 412:../Generated_Code/TU2.c **** **     @return
 413:../Generated_Code/TU2.c **** **                         - Error code, possible codes:
 414:../Generated_Code/TU2.c **** **                           ERR_OK - OK
 415:../Generated_Code/TU2.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 416:../Generated_Code/TU2.c **** **                           out of possible range
 417:../Generated_Code/TU2.c **** **                           ERR_NOTAVAIL -  Action is not possible on
 418:../Generated_Code/TU2.c **** **                           selected channel or counter. Supported
 419:../Generated_Code/TU2.c **** **                           combinations are HW specific.
 420:../Generated_Code/TU2.c **** **                           ERR_SPEED - The component does not work in
 421:../Generated_Code/TU2.c **** **                           the active clock configuration
 422:../Generated_Code/TU2.c **** */
 423:../Generated_Code/TU2.c **** /* ===================================================================*/
 424:../Generated_Code/TU2.c **** LDD_TError TU2_SelectOutputAction(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, LDD_TimerUnit
 425:../Generated_Code/TU2.c **** {
 469              		.loc 1 425 0
 470              		.cfi_startproc
 471 0000 90B5     		push	{r4, r7, lr}
 472              	.LCFI15:
 473              		.cfi_def_cfa_offset 12
 474              		.cfi_offset 4, -12
 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 83B0     		sub	sp, sp, #12
 478              	.LCFI16:
 479              		.cfi_def_cfa_offset 24
 480 0004 00AF     		add	r7, sp, #0
 481              	.LCFI17:
 482              		.cfi_def_cfa_register 7
 483 0006 7860     		str	r0, [r7, #4]
 484 0008 081C     		mov	r0, r1
 485 000a 111C     		mov	r1, r2
 486 000c 1A1C     		mov	r2, r3
 487 000e FB1C     		add	r3, r7, #3
 488 0010 1870     		strb	r0, [r3]
 489 0012 BB1C     		add	r3, r7, #2
 490 0014 1970     		strb	r1, [r3]
 491 0016 7B1C     		add	r3, r7, #1
 492 0018 1A70     		strb	r2, [r3]
 426:../Generated_Code/TU2.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 427:../Generated_Code/TU2.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 428:../Generated_Code/TU2.c ****      property to the "yes" value in the "Configuration inspector" */
 429:../Generated_Code/TU2.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 493              		.loc 1 429 0
 494 001a FB1C     		add	r3, r7, #3
 495 001c 1B78     		ldrb	r3, [r3]
 496 001e 012B     		cmp	r3, #1
 497 0020 01D9     		bls	.L27
 430:../Generated_Code/TU2.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 498              		.loc 1 430 0
 499 0022 8223     		mov	r3, #130
 500 0024 06E1     		b	.L28
 501              	.L27:
 431:../Generated_Code/TU2.c ****   }
 432:../Generated_Code/TU2.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 502              		.loc 1 432 0
 503 0026 FB1C     		add	r3, r7, #3
 504 0028 1B78     		ldrb	r3, [r3]
 505 002a 844A     		ldr	r2, .L45
 506 002c D35C     		ldrb	r3, [r2, r3]
 507 002e 002B     		cmp	r3, #0
 508 0030 01D0     		beq	.L29
 433:../Generated_Code/TU2.c ****     return ERR_NOTAVAIL;               /* If not then error */
 509              		.loc 1 433 0
 510 0032 0923     		mov	r3, #9
 511 0034 FEE0     		b	.L28
 512              	.L29:
 434:../Generated_Code/TU2.c ****   }
 435:../Generated_Code/TU2.c ****   switch (CounterAction) {
 513              		.loc 1 435 0
 514 0036 7B1C     		add	r3, r7, #1
 515 0038 1B78     		ldrb	r3, [r3]
 516 003a 022B     		cmp	r3, #2
 517 003c 00D1     		bne	.LCB438
 518 003e 8CE0     		b	.L32	@long jump
 519              	.LCB438:
 520 0040 032B     		cmp	r3, #3
 521 0042 00D1     		bne	.LCB440
 522 0044 BEE0     		b	.L33	@long jump
 523              	.LCB440:
 524 0046 002B     		cmp	r3, #0
 525 0048 00D0     		beq	.LCB442
 526 004a F0E0     		b	.L44	@long jump
 527              	.LCB442:
 528              	.L31:
 436:../Generated_Code/TU2.c ****     case OUTPUT_NONE:
 437:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_TOGGLE);
 529              		.loc 1 437 0
 530 004c 7C49     		ldr	r1, .L45+4
 531 004e FB1C     		add	r3, r7, #3
 532 0050 1B78     		ldrb	r3, [r3]
 533 0052 7C4A     		ldr	r2, .L45+8
 534 0054 D35C     		ldrb	r3, [r2, r3]
 535 0056 181C     		mov	r0, r3
 536 0058 794A     		ldr	r2, .L45+4
 537 005a FB1C     		add	r3, r7, #3
 538 005c 1B78     		ldrb	r3, [r3]
 539 005e 794C     		ldr	r4, .L45+8
 540 0060 E35C     		ldrb	r3, [r4, r3]
 541 0062 0133     		add	r3, r3, #1
 542 0064 DB00     		lsl	r3, r3, #3
 543 0066 D318     		add	r3, r2, r3
 544 0068 5B68     		ldr	r3, [r3, #4]
 545 006a B022     		mov	r2, #176
 546 006c 9343     		bic	r3, r2
 547 006e 1022     		mov	r2, #16
 548 0070 1A43     		orr	r2, r3
 549 0072 431C     		add	r3, r0, #1
 550 0074 DB00     		lsl	r3, r3, #3
 551 0076 CB18     		add	r3, r1, r3
 552 0078 5A60     		str	r2, [r3, #4]
 438:../Generated_Code/TU2.c ****       switch (CompareAction) {
 553              		.loc 1 438 0
 554 007a BB1C     		add	r3, r7, #2
 555 007c 1B78     		ldrb	r3, [r3]
 556 007e 012B     		cmp	r3, #1
 557 0080 20D0     		beq	.L36
 558 0082 02DC     		bgt	.L39
 559 0084 002B     		cmp	r3, #0
 560 0086 05D0     		beq	.L35
 561 0088 64E0     		b	.L34
 562              	.L39:
 563 008a 022B     		cmp	r3, #2
 564 008c 32D0     		beq	.L37
 565 008e 032B     		cmp	r3, #3
 566 0090 48D0     		beq	.L38
 567 0092 5FE0     		b	.L34
 568              	.L35:
 439:../Generated_Code/TU2.c ****         case OUTPUT_NONE:
 440:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_NON
 569              		.loc 1 440 0
 570 0094 6A49     		ldr	r1, .L45+4
 571 0096 FB1C     		add	r3, r7, #3
 572 0098 1B78     		ldrb	r3, [r3]
 573 009a 6A4A     		ldr	r2, .L45+8
 574 009c D35C     		ldrb	r3, [r2, r3]
 575 009e 181C     		mov	r0, r3
 576 00a0 674A     		ldr	r2, .L45+4
 577 00a2 FB1C     		add	r3, r7, #3
 578 00a4 1B78     		ldrb	r3, [r3]
 579 00a6 674C     		ldr	r4, .L45+8
 580 00a8 E35C     		ldrb	r3, [r4, r3]
 581 00aa 0133     		add	r3, r3, #1
 582 00ac DB00     		lsl	r3, r3, #3
 583 00ae D318     		add	r3, r2, r3
 584 00b0 5B68     		ldr	r3, [r3, #4]
 585 00b2 8C22     		mov	r2, #140
 586 00b4 1C1C     		mov	r4, r3
 587 00b6 9443     		bic	r4, r2
 588 00b8 221C     		mov	r2, r4
 589 00ba 431C     		add	r3, r0, #1
 590 00bc DB00     		lsl	r3, r3, #3
 591 00be CB18     		add	r3, r1, r3
 592 00c0 5A60     		str	r2, [r3, #4]
 441:../Generated_Code/TU2.c ****           break;
 593              		.loc 1 441 0
 594 00c2 49E0     		b	.L40
 595              	.L36:
 442:../Generated_Code/TU2.c ****         case OUTPUT_TOGGLE:
 443:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_RIS
 596              		.loc 1 443 0
 597 00c4 5E49     		ldr	r1, .L45+4
 598 00c6 FB1C     		add	r3, r7, #3
 599 00c8 1B78     		ldrb	r3, [r3]
 600 00ca 5E4A     		ldr	r2, .L45+8
 601 00cc D35C     		ldrb	r3, [r2, r3]
 602 00ce 181C     		mov	r0, r3
 603 00d0 5B4A     		ldr	r2, .L45+4
 604 00d2 FB1C     		add	r3, r7, #3
 605 00d4 1B78     		ldrb	r3, [r3]
 606 00d6 5B4C     		ldr	r4, .L45+8
 607 00d8 E35C     		ldrb	r3, [r4, r3]
 608 00da 0133     		add	r3, r3, #1
 609 00dc DB00     		lsl	r3, r3, #3
 610 00de D318     		add	r3, r2, r3
 611 00e0 5B68     		ldr	r3, [r3, #4]
 612 00e2 8C22     		mov	r2, #140
 613 00e4 9343     		bic	r3, r2
 614 00e6 0422     		mov	r2, #4
 615 00e8 1A43     		orr	r2, r3
 616 00ea 431C     		add	r3, r0, #1
 617 00ec DB00     		lsl	r3, r3, #3
 618 00ee CB18     		add	r3, r1, r3
 619 00f0 5A60     		str	r2, [r3, #4]
 444:../Generated_Code/TU2.c ****           break;
 620              		.loc 1 444 0
 621 00f2 31E0     		b	.L40
 622              	.L37:
 445:../Generated_Code/TU2.c ****         case OUTPUT_CLEAR:
 446:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FAL
 623              		.loc 1 446 0
 624 00f4 5249     		ldr	r1, .L45+4
 625 00f6 FB1C     		add	r3, r7, #3
 626 00f8 1B78     		ldrb	r3, [r3]
 627 00fa 524A     		ldr	r2, .L45+8
 628 00fc D35C     		ldrb	r3, [r2, r3]
 629 00fe 181C     		mov	r0, r3
 630 0100 4F4A     		ldr	r2, .L45+4
 631 0102 FB1C     		add	r3, r7, #3
 632 0104 1B78     		ldrb	r3, [r3]
 633 0106 4F4C     		ldr	r4, .L45+8
 634 0108 E35C     		ldrb	r3, [r4, r3]
 635 010a 0133     		add	r3, r3, #1
 636 010c DB00     		lsl	r3, r3, #3
 637 010e D318     		add	r3, r2, r3
 638 0110 5B68     		ldr	r3, [r3, #4]
 639 0112 8C22     		mov	r2, #140
 640 0114 9343     		bic	r3, r2
 641 0116 0822     		mov	r2, #8
 642 0118 1A43     		orr	r2, r3
 643 011a 431C     		add	r3, r0, #1
 644 011c DB00     		lsl	r3, r3, #3
 645 011e CB18     		add	r3, r1, r3
 646 0120 5A60     		str	r2, [r3, #4]
 447:../Generated_Code/TU2.c ****           break;
 647              		.loc 1 447 0
 648 0122 19E0     		b	.L40
 649              	.L38:
 448:../Generated_Code/TU2.c ****         case OUTPUT_SET:
 449:../Generated_Code/TU2.c ****           TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOT
 650              		.loc 1 449 0
 651 0124 4649     		ldr	r1, .L45+4
 652 0126 FB1C     		add	r3, r7, #3
 653 0128 1B78     		ldrb	r3, [r3]
 654 012a 464A     		ldr	r2, .L45+8
 655 012c D35C     		ldrb	r3, [r2, r3]
 656 012e 181C     		mov	r0, r3
 657 0130 434A     		ldr	r2, .L45+4
 658 0132 FB1C     		add	r3, r7, #3
 659 0134 1B78     		ldrb	r3, [r3]
 660 0136 434C     		ldr	r4, .L45+8
 661 0138 E35C     		ldrb	r3, [r4, r3]
 662 013a 0133     		add	r3, r3, #1
 663 013c DB00     		lsl	r3, r3, #3
 664 013e D318     		add	r3, r2, r3
 665 0140 5B68     		ldr	r3, [r3, #4]
 666 0142 8C22     		mov	r2, #140
 667 0144 9343     		bic	r3, r2
 668 0146 0C22     		mov	r2, #12
 669 0148 1A43     		orr	r2, r3
 670 014a 431C     		add	r3, r0, #1
 671 014c DB00     		lsl	r3, r3, #3
 672 014e CB18     		add	r3, r1, r3
 673 0150 5A60     		str	r2, [r3, #4]
 450:../Generated_Code/TU2.c ****           break;
 674              		.loc 1 450 0
 675 0152 01E0     		b	.L40
 676              	.L34:
 451:../Generated_Code/TU2.c ****         default:
 452:../Generated_Code/TU2.c ****           return ERR_NOTAVAIL;
 677              		.loc 1 452 0
 678 0154 0923     		mov	r3, #9
 679 0156 6DE0     		b	.L28
 680              	.L40:
 453:../Generated_Code/TU2.c ****       }
 454:../Generated_Code/TU2.c ****       break;
 681              		.loc 1 454 0
 682 0158 6BE0     		b	.L41
 683              	.L32:
 455:../Generated_Code/TU2.c ****     case OUTPUT_CLEAR:
 456:../Generated_Code/TU2.c ****       if (CompareAction != OUTPUT_SET) {
 684              		.loc 1 456 0
 685 015a BB1C     		add	r3, r7, #2
 686 015c 1B78     		ldrb	r3, [r3]
 687 015e 032B     		cmp	r3, #3
 688 0160 01D0     		beq	.L42
 457:../Generated_Code/TU2.c ****         return ERR_NOTAVAIL;
 689              		.loc 1 457 0
 690 0162 0923     		mov	r3, #9
 691 0164 66E0     		b	.L28
 692              	.L42:
 458:../Generated_Code/TU2.c ****       }
 459:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_CLEAR);
 693              		.loc 1 459 0
 694 0166 3649     		ldr	r1, .L45+4
 695 0168 FB1C     		add	r3, r7, #3
 696 016a 1B78     		ldrb	r3, [r3]
 697 016c 354A     		ldr	r2, .L45+8
 698 016e D35C     		ldrb	r3, [r2, r3]
 699 0170 181C     		mov	r0, r3
 700 0172 334A     		ldr	r2, .L45+4
 701 0174 FB1C     		add	r3, r7, #3
 702 0176 1B78     		ldrb	r3, [r3]
 703 0178 324C     		ldr	r4, .L45+8
 704 017a E35C     		ldrb	r3, [r4, r3]
 705 017c 0133     		add	r3, r3, #1
 706 017e DB00     		lsl	r3, r3, #3
 707 0180 D318     		add	r3, r2, r3
 708 0182 5B68     		ldr	r3, [r3, #4]
 709 0184 B022     		mov	r2, #176
 710 0186 9343     		bic	r3, r2
 711 0188 2022     		mov	r2, #32
 712 018a 1A43     		orr	r2, r3
 713 018c 431C     		add	r3, r0, #1
 714 018e DB00     		lsl	r3, r3, #3
 715 0190 CB18     		add	r3, r1, r3
 716 0192 5A60     		str	r2, [r3, #4]
 460:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_BOTH);
 717              		.loc 1 460 0
 718 0194 2A49     		ldr	r1, .L45+4
 719 0196 FB1C     		add	r3, r7, #3
 720 0198 1B78     		ldrb	r3, [r3]
 721 019a 2A4A     		ldr	r2, .L45+8
 722 019c D35C     		ldrb	r3, [r2, r3]
 723 019e 181C     		mov	r0, r3
 724 01a0 274A     		ldr	r2, .L45+4
 725 01a2 FB1C     		add	r3, r7, #3
 726 01a4 1B78     		ldrb	r3, [r3]
 727 01a6 274C     		ldr	r4, .L45+8
 728 01a8 E35C     		ldrb	r3, [r4, r3]
 729 01aa 0133     		add	r3, r3, #1
 730 01ac DB00     		lsl	r3, r3, #3
 731 01ae D318     		add	r3, r2, r3
 732 01b0 5B68     		ldr	r3, [r3, #4]
 733 01b2 8C22     		mov	r2, #140
 734 01b4 9343     		bic	r3, r2
 735 01b6 0C22     		mov	r2, #12
 736 01b8 1A43     		orr	r2, r3
 737 01ba 431C     		add	r3, r0, #1
 738 01bc DB00     		lsl	r3, r3, #3
 739 01be CB18     		add	r3, r1, r3
 740 01c0 5A60     		str	r2, [r3, #4]
 461:../Generated_Code/TU2.c ****       break;
 741              		.loc 1 461 0
 742 01c2 36E0     		b	.L41
 743              	.L33:
 462:../Generated_Code/TU2.c ****     case OUTPUT_SET:
 463:../Generated_Code/TU2.c ****       if (CompareAction != OUTPUT_CLEAR) {
 744              		.loc 1 463 0
 745 01c4 BB1C     		add	r3, r7, #2
 746 01c6 1B78     		ldrb	r3, [r3]
 747 01c8 022B     		cmp	r3, #2
 748 01ca 01D0     		beq	.L43
 464:../Generated_Code/TU2.c ****         return ERR_NOTAVAIL;
 749              		.loc 1 464 0
 750 01cc 0923     		mov	r3, #9
 751 01ce 31E0     		b	.L28
 752              	.L43:
 465:../Generated_Code/TU2.c ****       }
 466:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelMode(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_OUTPUT_SET);
 753              		.loc 1 466 0
 754 01d0 1B49     		ldr	r1, .L45+4
 755 01d2 FB1C     		add	r3, r7, #3
 756 01d4 1B78     		ldrb	r3, [r3]
 757 01d6 1B4A     		ldr	r2, .L45+8
 758 01d8 D35C     		ldrb	r3, [r2, r3]
 759 01da 181C     		mov	r0, r3
 760 01dc 184A     		ldr	r2, .L45+4
 761 01de FB1C     		add	r3, r7, #3
 762 01e0 1B78     		ldrb	r3, [r3]
 763 01e2 184C     		ldr	r4, .L45+8
 764 01e4 E35C     		ldrb	r3, [r4, r3]
 765 01e6 0133     		add	r3, r3, #1
 766 01e8 DB00     		lsl	r3, r3, #3
 767 01ea D318     		add	r3, r2, r3
 768 01ec 5B68     		ldr	r3, [r3, #4]
 769 01ee B022     		mov	r2, #176
 770 01f0 9343     		bic	r3, r2
 771 01f2 3022     		mov	r2, #48
 772 01f4 1A43     		orr	r2, r3
 773 01f6 431C     		add	r3, r0, #1
 774 01f8 DB00     		lsl	r3, r3, #3
 775 01fa CB18     		add	r3, r1, r3
 776 01fc 5A60     		str	r2, [r3, #4]
 467:../Generated_Code/TU2.c ****       TPM_PDD_SelectChannelEdgeLevel(TPM0_BASE_PTR, ChannelDevice[ChannelIdx], TPM_PDD_EDGE_FALLING
 777              		.loc 1 467 0
 778 01fe 1049     		ldr	r1, .L45+4
 779 0200 FB1C     		add	r3, r7, #3
 780 0202 1B78     		ldrb	r3, [r3]
 781 0204 0F4A     		ldr	r2, .L45+8
 782 0206 D35C     		ldrb	r3, [r2, r3]
 783 0208 181C     		mov	r0, r3
 784 020a 0D4A     		ldr	r2, .L45+4
 785 020c FB1C     		add	r3, r7, #3
 786 020e 1B78     		ldrb	r3, [r3]
 787 0210 0C4C     		ldr	r4, .L45+8
 788 0212 E35C     		ldrb	r3, [r4, r3]
 789 0214 0133     		add	r3, r3, #1
 790 0216 DB00     		lsl	r3, r3, #3
 791 0218 D318     		add	r3, r2, r3
 792 021a 5B68     		ldr	r3, [r3, #4]
 793 021c 8C22     		mov	r2, #140
 794 021e 9343     		bic	r3, r2
 795 0220 0822     		mov	r2, #8
 796 0222 1A43     		orr	r2, r3
 797 0224 431C     		add	r3, r0, #1
 798 0226 DB00     		lsl	r3, r3, #3
 799 0228 CB18     		add	r3, r1, r3
 800 022a 5A60     		str	r2, [r3, #4]
 468:../Generated_Code/TU2.c ****       break;
 801              		.loc 1 468 0
 802 022c 01E0     		b	.L41
 803              	.L44:
 469:../Generated_Code/TU2.c ****     default:
 470:../Generated_Code/TU2.c ****       return ERR_NOTAVAIL;
 804              		.loc 1 470 0
 805 022e 0923     		mov	r3, #9
 806 0230 00E0     		b	.L28
 807              	.L41:
 471:../Generated_Code/TU2.c ****   }
 472:../Generated_Code/TU2.c ****   return ERR_OK;                       /* OK */
 808              		.loc 1 472 0
 809 0232 0023     		mov	r3, #0
 810              	.L28:
 473:../Generated_Code/TU2.c **** }
 811              		.loc 1 473 0
 812 0234 181C     		mov	r0, r3
 813 0236 BD46     		mov	sp, r7
 814 0238 03B0     		add	sp, sp, #12
 815              		@ sp needed for prologue
 816 023a 90BD     		pop	{r4, r7, pc}
 817              	.L46:
 818              		.align	2
 819              	.L45:
 820 023c 00000000 		.word	ChannelMode
 821 0240 00800340 		.word	1073971200
 822 0244 00000000 		.word	ChannelDevice
 823              		.cfi_endproc
 824              	.LFE5:
 826              		.text
 827              	.Letext0:
 828              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 829              		.file 3 "../Generated_Code/PE_Types.h"
 830              		.file 4 "C:/Freescale/CW MCU v10.6/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
 831              		.file 5 "../Generated_Code/TU2.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU2.c
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:18     .rodata.ChannelDevice:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:21     .rodata.ChannelDevice:00000000 ChannelDevice
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:25     .rodata.ChannelMode:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:28     .rodata.ChannelMode:00000000 ChannelMode
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:31     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:34     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:37     .text.TU2_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:42     .text.TU2_Init:00000000 TU2_Init
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:196    .text.TU2_Init:000000d8 $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:209    .text.TU2_GetPeriodTicks:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:214    .text.TU2_GetPeriodTicks:00000000 TU2_GetPeriodTicks
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:261    .text.TU2_GetPeriodTicks:00000038 $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:266    .text.TU2_GetCounterValue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:271    .text.TU2_GetCounterValue:00000000 TU2_GetCounterValue
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:300    .text.TU2_GetCounterValue:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:305    .text.TU2_SetOffsetTicks:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:310    .text.TU2_SetOffsetTicks:00000000 TU2_SetOffsetTicks
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:374    .text.TU2_SetOffsetTicks:0000004c $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:381    .text.TU2_GetOffsetTicks:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:386    .text.TU2_GetOffsetTicks:00000000 TU2_GetOffsetTicks
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:455    .text.TU2_GetOffsetTicks:00000058 $d
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:462    .text.TU2_SelectOutputAction:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:467    .text.TU2_SelectOutputAction:00000000 TU2_SelectOutputAction
C:\Users\Student\AppData\Local\Temp\ccp4GutE.s:820    .text.TU2_SelectOutputAction:0000023c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
