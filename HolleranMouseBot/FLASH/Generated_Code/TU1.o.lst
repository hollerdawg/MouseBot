   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TU1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	4
  23              		.section	.text.TU1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TU1_Init
  26              		.code	16
  27              		.thumb_func
  29              	TU1_Init:
  30              	.LFB0:
  31              		.file 1 "../Generated_Code/TU1.c"
   1:../Generated_Code/TU1.c **** /* ###################################################################
   2:../Generated_Code/TU1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/TU1.c **** **     Filename    : TU1.c
   4:../Generated_Code/TU1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/TU1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/TU1.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/TU1.c **** **     Version     : Component 01.164, Driver 01.11, CPU db: 3.00.000
   8:../Generated_Code/TU1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/TU1.c **** **     Date/Time   : 2014-11-15, 18:04, # CodeGen: 88
  10:../Generated_Code/TU1.c **** **     Abstract    :
  11:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/TU1.c **** **     Settings    :
  14:../Generated_Code/TU1.c **** **          Component name                                 : TU1
  15:../Generated_Code/TU1.c **** **          Module name                                    : TPM1
  16:../Generated_Code/TU1.c **** **          Counter                                        : TPM1_CNT
  17:../Generated_Code/TU1.c **** **          Counter direction                              : Up
  18:../Generated_Code/TU1.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/TU1.c **** **          Value type                                     : Optimal
  20:../Generated_Code/TU1.c **** **          Input clock source                             : Internal
  21:../Generated_Code/TU1.c **** **            Counter frequency                            : Auto select
  22:../Generated_Code/TU1.c **** **          Counter restart                                : On-match
  23:../Generated_Code/TU1.c **** **            Period device                                : TPM1_MOD
  24:../Generated_Code/TU1.c **** **            Period                                       : 349.525333 ms
  25:../Generated_Code/TU1.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/TU1.c **** **          Channel list                                   : 0
  27:../Generated_Code/TU1.c **** **          Initialization                                 : 
  28:../Generated_Code/TU1.c **** **            Enabled in init. code                        : yes
  29:../Generated_Code/TU1.c **** **            Auto initialization                          : yes
  30:../Generated_Code/TU1.c **** **            Event mask                                   : 
  31:../Generated_Code/TU1.c **** **              OnCounterRestart                           : Disabled
  32:../Generated_Code/TU1.c **** **              OnChannel0                                 : Disabled
  33:../Generated_Code/TU1.c **** **              OnChannel1                                 : Disabled
  34:../Generated_Code/TU1.c **** **              OnChannel2                                 : Disabled
  35:../Generated_Code/TU1.c **** **              OnChannel3                                 : Disabled
  36:../Generated_Code/TU1.c **** **              OnChannel4                                 : Disabled
  37:../Generated_Code/TU1.c **** **              OnChannel5                                 : Disabled
  38:../Generated_Code/TU1.c **** **              OnChannel6                                 : Disabled
  39:../Generated_Code/TU1.c **** **              OnChannel7                                 : Disabled
  40:../Generated_Code/TU1.c **** **          CPU clock/configuration selection              : 
  41:../Generated_Code/TU1.c **** **            Clock configuration 0                        : This component enabled
  42:../Generated_Code/TU1.c **** **            Clock configuration 1                        : This component disabled
  43:../Generated_Code/TU1.c **** **            Clock configuration 2                        : This component disabled
  44:../Generated_Code/TU1.c **** **            Clock configuration 3                        : This component disabled
  45:../Generated_Code/TU1.c **** **            Clock configuration 4                        : This component disabled
  46:../Generated_Code/TU1.c **** **            Clock configuration 5                        : This component disabled
  47:../Generated_Code/TU1.c **** **            Clock configuration 6                        : This component disabled
  48:../Generated_Code/TU1.c **** **            Clock configuration 7                        : This component disabled
  49:../Generated_Code/TU1.c **** **     Contents    :
  50:../Generated_Code/TU1.c **** **         Init            - LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr);
  51:../Generated_Code/TU1.c **** **         Deinit          - void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr);
  52:../Generated_Code/TU1.c **** **         ResetCounter    - LDD_TError TU1_ResetCounter(LDD_TDeviceData *DeviceDataPtr);
  53:../Generated_Code/TU1.c **** **         GetCounterValue - TU1_TValueType TU1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr);
  54:../Generated_Code/TU1.c **** **
  55:../Generated_Code/TU1.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  56:../Generated_Code/TU1.c **** **     All Rights Reserved.
  57:../Generated_Code/TU1.c **** **     
  58:../Generated_Code/TU1.c **** **     Redistribution and use in source and binary forms, with or without modification,
  59:../Generated_Code/TU1.c **** **     are permitted provided that the following conditions are met:
  60:../Generated_Code/TU1.c **** **     
  61:../Generated_Code/TU1.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  62:../Generated_Code/TU1.c **** **       of conditions and the following disclaimer.
  63:../Generated_Code/TU1.c **** **     
  64:../Generated_Code/TU1.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  65:../Generated_Code/TU1.c **** **       list of conditions and the following disclaimer in the documentation and/or
  66:../Generated_Code/TU1.c **** **       other materials provided with the distribution.
  67:../Generated_Code/TU1.c **** **     
  68:../Generated_Code/TU1.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  69:../Generated_Code/TU1.c **** **       contributors may be used to endorse or promote products derived from this
  70:../Generated_Code/TU1.c **** **       software without specific prior written permission.
  71:../Generated_Code/TU1.c **** **     
  72:../Generated_Code/TU1.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  73:../Generated_Code/TU1.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  74:../Generated_Code/TU1.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  75:../Generated_Code/TU1.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  76:../Generated_Code/TU1.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  77:../Generated_Code/TU1.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  78:../Generated_Code/TU1.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  79:../Generated_Code/TU1.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  80:../Generated_Code/TU1.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  81:../Generated_Code/TU1.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  82:../Generated_Code/TU1.c **** **     
  83:../Generated_Code/TU1.c **** **     http: www.freescale.com
  84:../Generated_Code/TU1.c **** **     mail: support@freescale.com
  85:../Generated_Code/TU1.c **** ** ###################################################################*/
  86:../Generated_Code/TU1.c **** /*!
  87:../Generated_Code/TU1.c **** ** @file TU1.c
  88:../Generated_Code/TU1.c **** ** @version 01.11
  89:../Generated_Code/TU1.c **** ** @brief
  90:../Generated_Code/TU1.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  91:../Generated_Code/TU1.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  92:../Generated_Code/TU1.c **** */         
  93:../Generated_Code/TU1.c **** /*!
  94:../Generated_Code/TU1.c **** **  @addtogroup TU1_module TU1 module documentation
  95:../Generated_Code/TU1.c **** **  @{
  96:../Generated_Code/TU1.c **** */         
  97:../Generated_Code/TU1.c **** 
  98:../Generated_Code/TU1.c **** /* MODULE TU1. */
  99:../Generated_Code/TU1.c **** 
 100:../Generated_Code/TU1.c **** #include "TU1.h"
 101:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} No RTOS includes */
 102:../Generated_Code/TU1.c **** #include "IO_Map.h"
 103:../Generated_Code/TU1.c **** 
 104:../Generated_Code/TU1.c **** #ifdef __cplusplus
 105:../Generated_Code/TU1.c **** extern "C" {
 106:../Generated_Code/TU1.c **** #endif 
 107:../Generated_Code/TU1.c **** 
 108:../Generated_Code/TU1.c **** 
 109:../Generated_Code/TU1.c **** typedef struct {
 110:../Generated_Code/TU1.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
 111:../Generated_Code/TU1.c **** } TU1_TDeviceData;
 112:../Generated_Code/TU1.c **** 
 113:../Generated_Code/TU1.c **** typedef TU1_TDeviceData *TU1_TDeviceDataPtr; /* Pointer to the device data structure. */
 114:../Generated_Code/TU1.c **** 
 115:../Generated_Code/TU1.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 116:../Generated_Code/TU1.c **** static TU1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 117:../Generated_Code/TU1.c **** 
 118:../Generated_Code/TU1.c **** 
 119:../Generated_Code/TU1.c **** /* Internal method prototypes */
 120:../Generated_Code/TU1.c **** /*
 121:../Generated_Code/TU1.c **** ** ===================================================================
 122:../Generated_Code/TU1.c **** **     Method      :  TU1_Init (component TimerUnit_LDD)
 123:../Generated_Code/TU1.c **** */
 124:../Generated_Code/TU1.c **** /*!
 125:../Generated_Code/TU1.c **** **     @brief
 126:../Generated_Code/TU1.c **** **         Initializes the device. Allocates memory for the device data
 127:../Generated_Code/TU1.c **** **         structure, allocates interrupt vectors and sets interrupt
 128:../Generated_Code/TU1.c **** **         priority, sets pin routing, sets timing, etc. If the
 129:../Generated_Code/TU1.c **** **         property ["Enable in init. code"] is set to "yes" value then
 130:../Generated_Code/TU1.c **** **         the device is also enabled (see the description of the
 131:../Generated_Code/TU1.c **** **         [Enable] method). In this case the [Enable] method is not
 132:../Generated_Code/TU1.c **** **         necessary and needn't to be generated. This method can be
 133:../Generated_Code/TU1.c **** **         called only once. Before the second call of Init the [Deinit]
 134:../Generated_Code/TU1.c **** **         must be called first.
 135:../Generated_Code/TU1.c **** **     @param
 136:../Generated_Code/TU1.c **** **         UserDataPtr     - Pointer to the user or
 137:../Generated_Code/TU1.c **** **                           RTOS specific data. This pointer will be
 138:../Generated_Code/TU1.c **** **                           passed as an event or callback parameter.
 139:../Generated_Code/TU1.c **** **     @return
 140:../Generated_Code/TU1.c **** **                         - Pointer to the dynamically allocated private
 141:../Generated_Code/TU1.c **** **                           structure or NULL if there was an error.
 142:../Generated_Code/TU1.c **** */
 143:../Generated_Code/TU1.c **** /* ===================================================================*/
 144:../Generated_Code/TU1.c **** LDD_TDeviceData* TU1_Init(LDD_TUserData *UserDataPtr)
 145:../Generated_Code/TU1.c **** {
  32              		.loc 1 145 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 84B0     		sub	sp, sp, #16
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
 146:../Generated_Code/TU1.c ****   /* Allocate device structure */
 147:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv;
 148:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 149:../Generated_Code/TU1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  46              		.loc 1 149 0
  47 0008 134B     		ldr	r3, .L3
  48 000a FB60     		str	r3, [r7, #12]
 150:../Generated_Code/TU1.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  49              		.loc 1 150 0
  50 000c FB68     		ldr	r3, [r7, #12]
  51 000e 7A68     		ldr	r2, [r7, #4]
  52 0010 1A60     		str	r2, [r3]
 151:../Generated_Code/TU1.c ****   /* SIM_SCGC6: TPM1=1 */
 152:../Generated_Code/TU1.c ****   SIM_SCGC6 |= SIM_SCGC6_TPM1_MASK;
  53              		.loc 1 152 0
  54 0012 124A     		ldr	r2, .L3+4
  55 0014 1149     		ldr	r1, .L3+4
  56 0016 124B     		ldr	r3, .L3+8
  57 0018 CB58     		ldr	r3, [r1, r3]
  58 001a 8021     		mov	r1, #128
  59 001c 8904     		lsl	r1, r1, #18
  60 001e 1943     		orr	r1, r3
  61 0020 0F4B     		ldr	r3, .L3+8
  62 0022 D150     		str	r1, [r2, r3]
 153:../Generated_Code/TU1.c ****   /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 154:../Generated_Code/TU1.c ****   TPM1_SC = (TPM_SC_CMOD(0x00) | TPM_SC_PS(0x00)); /* Clear status and control register */
  63              		.loc 1 154 0
  64 0024 0F4B     		ldr	r3, .L3+12
  65 0026 0022     		mov	r2, #0
  66 0028 1A60     		str	r2, [r3]
 155:../Generated_Code/TU1.c ****   /* TPM1_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 156:../Generated_Code/TU1.c ****   TPM1_CNT = TPM_CNT_COUNT(0x00);      /* Reset counter register */
  67              		.loc 1 156 0
  68 002a 0E4B     		ldr	r3, .L3+12
  69 002c 0022     		mov	r2, #0
  70 002e 5A60     		str	r2, [r3, #4]
 157:../Generated_Code/TU1.c ****   /* TPM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 158:../Generated_Code/TU1.c ****   TPM1_C0SC = 0x00U;                   /* Clear channel status and control register */
  71              		.loc 1 158 0
  72 0030 0C4B     		ldr	r3, .L3+12
  73 0032 0022     		mov	r2, #0
  74 0034 DA60     		str	r2, [r3, #12]
 159:../Generated_Code/TU1.c ****   /* TPM1_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 160:../Generated_Code/TU1.c ****   TPM1_C1SC = 0x00U;                   /* Clear channel status and control register */
  75              		.loc 1 160 0
  76 0036 0B4B     		ldr	r3, .L3+12
  77 0038 0022     		mov	r2, #0
  78 003a 5A61     		str	r2, [r3, #20]
 161:../Generated_Code/TU1.c ****   /* TPM1_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 162:../Generated_Code/TU1.c ****   TPM1_MOD = TPM_MOD_MOD(0xFFFF);      /* Set up modulo register */
  79              		.loc 1 162 0
  80 003c 094B     		ldr	r3, .L3+12
  81 003e 0A4A     		ldr	r2, .L3+16
  82 0040 9A60     		str	r2, [r3, #8]
 163:../Generated_Code/TU1.c ****   /* TPM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 164:../Generated_Code/TU1.c ****   TPM1_SC = (TPM_SC_CMOD(0x01) | TPM_SC_PS(0x07)); /* Set up status and control register */
  83              		.loc 1 164 0
  84 0042 084B     		ldr	r3, .L3+12
  85 0044 0F22     		mov	r2, #15
  86 0046 1A60     		str	r2, [r3]
 165:../Generated_Code/TU1.c ****   /* Registration of the device structure */
 166:../Generated_Code/TU1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID,DeviceDataPrv);
  87              		.loc 1 166 0
  88 0048 084B     		ldr	r3, .L3+20
  89 004a FA68     		ldr	r2, [r7, #12]
  90 004c 5A60     		str	r2, [r3, #4]
 167:../Generated_Code/TU1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
  91              		.loc 1 167 0
  92 004e FB68     		ldr	r3, [r7, #12]
 168:../Generated_Code/TU1.c **** }
  93              		.loc 1 168 0
  94 0050 181C     		mov	r0, r3
  95 0052 BD46     		mov	sp, r7
  96 0054 04B0     		add	sp, sp, #16
  97              		@ sp needed for prologue
  98 0056 80BD     		pop	{r7, pc}
  99              	.L4:
 100              		.align	2
 101              	.L3:
 102 0058 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 103 005c 00700440 		.word	1074032640
 104 0060 3C100000 		.word	4156
 105 0064 00900340 		.word	1073975296
 106 0068 FFFF0000 		.word	65535
 107 006c 00000000 		.word	PE_LDD_DeviceDataList
 108              		.cfi_endproc
 109              	.LFE0:
 111              		.section	.text.TU1_Deinit,"ax",%progbits
 112              		.align	2
 113              		.global	TU1_Deinit
 114              		.code	16
 115              		.thumb_func
 117              	TU1_Deinit:
 118              	.LFB1:
 169:../Generated_Code/TU1.c **** 
 170:../Generated_Code/TU1.c **** /*
 171:../Generated_Code/TU1.c **** ** ===================================================================
 172:../Generated_Code/TU1.c **** **     Method      :  TU1_Deinit (component TimerUnit_LDD)
 173:../Generated_Code/TU1.c **** */
 174:../Generated_Code/TU1.c **** /*!
 175:../Generated_Code/TU1.c **** **     @brief
 176:../Generated_Code/TU1.c **** **         Deinitializes the device. Switches off the device, frees the
 177:../Generated_Code/TU1.c **** **         device data structure memory, interrupts vectors, etc.
 178:../Generated_Code/TU1.c **** **     @param
 179:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 180:../Generated_Code/TU1.c **** **                           pointer returned by Init method
 181:../Generated_Code/TU1.c **** */
 182:../Generated_Code/TU1.c **** /* ===================================================================*/
 183:../Generated_Code/TU1.c **** void TU1_Deinit(LDD_TDeviceData *DeviceDataPtr)
 184:../Generated_Code/TU1.c **** {
 119              		.loc 1 184 0
 120              		.cfi_startproc
 121 0000 80B5     		push	{r7, lr}
 122              	.LCFI3:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 84B0     		sub	sp, sp, #16
 127              	.LCFI4:
 128              		.cfi_def_cfa_offset 24
 129 0004 00AF     		add	r7, sp, #0
 130              	.LCFI5:
 131              		.cfi_def_cfa_register 7
 132 0006 7860     		str	r0, [r7, #4]
 185:../Generated_Code/TU1.c ****   TU1_TDeviceData *DeviceDataPrv = (TU1_TDeviceData *)DeviceDataPtr;
 133              		.loc 1 185 0
 134 0008 7B68     		ldr	r3, [r7, #4]
 135 000a FB60     		str	r3, [r7, #12]
 186:../Generated_Code/TU1.c **** 
 187:../Generated_Code/TU1.c ****   (void)DeviceDataPrv;
 188:../Generated_Code/TU1.c ****   TPM_PDD_SelectPrescalerSource(TPM1_BASE_PTR, TPM_PDD_DISABLED);
 136              		.loc 1 188 0
 137 000c 054B     		ldr	r3, .L6
 138 000e 054A     		ldr	r2, .L6
 139 0010 1268     		ldr	r2, [r2]
 140 0012 9821     		mov	r1, #152
 141 0014 8A43     		bic	r2, r1
 142 0016 1A60     		str	r2, [r3]
 189:../Generated_Code/TU1.c ****   /* Unregistration of the device structure */
 190:../Generated_Code/TU1.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_TU1_ID);
 143              		.loc 1 190 0
 144 0018 034B     		ldr	r3, .L6+4
 145 001a 0022     		mov	r2, #0
 146 001c 5A60     		str	r2, [r3, #4]
 191:../Generated_Code/TU1.c ****   /* Deallocation of the device structure */
 192:../Generated_Code/TU1.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 193:../Generated_Code/TU1.c **** }
 147              		.loc 1 193 0
 148 001e BD46     		mov	sp, r7
 149 0020 04B0     		add	sp, sp, #16
 150              		@ sp needed for prologue
 151 0022 80BD     		pop	{r7, pc}
 152              	.L7:
 153              		.align	2
 154              	.L6:
 155 0024 00900340 		.word	1073975296
 156 0028 00000000 		.word	PE_LDD_DeviceDataList
 157              		.cfi_endproc
 158              	.LFE1:
 160              		.section	.text.TU1_ResetCounter,"ax",%progbits
 161              		.align	2
 162              		.global	TU1_ResetCounter
 163              		.code	16
 164              		.thumb_func
 166              	TU1_ResetCounter:
 167              	.LFB2:
 194:../Generated_Code/TU1.c **** 
 195:../Generated_Code/TU1.c **** /*
 196:../Generated_Code/TU1.c **** ** ===================================================================
 197:../Generated_Code/TU1.c **** **     Method      :  TU1_ResetCounter (component TimerUnit_LDD)
 198:../Generated_Code/TU1.c **** */
 199:../Generated_Code/TU1.c **** /*!
 200:../Generated_Code/TU1.c **** **     @brief
 201:../Generated_Code/TU1.c **** **         Resets counter. If counter is counting up then it is set to
 202:../Generated_Code/TU1.c **** **         zero. If counter is counting down then counter is updated to
 203:../Generated_Code/TU1.c **** **         the reload value.
 204:../Generated_Code/TU1.c **** **         The method is not available if HW doesn't allow resetting of
 205:../Generated_Code/TU1.c **** **         the counter.
 206:../Generated_Code/TU1.c **** **     @param
 207:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 208:../Generated_Code/TU1.c **** **                           pointer returned by [Init] method.
 209:../Generated_Code/TU1.c **** **     @return
 210:../Generated_Code/TU1.c **** **                         - Error code, possible codes:
 211:../Generated_Code/TU1.c **** **                           ERR_OK - OK 
 212:../Generated_Code/TU1.c **** **                           ERR_SPEED - The component does not work in
 213:../Generated_Code/TU1.c **** **                           the active clock configuration
 214:../Generated_Code/TU1.c **** */
 215:../Generated_Code/TU1.c **** /* ===================================================================*/
 216:../Generated_Code/TU1.c **** LDD_TError TU1_ResetCounter(LDD_TDeviceData *DeviceDataPtr)
 217:../Generated_Code/TU1.c **** {
 168              		.loc 1 217 0
 169              		.cfi_startproc
 170 0000 80B5     		push	{r7, lr}
 171              	.LCFI6:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              	.LCFI7:
 177              		.cfi_def_cfa_offset 16
 178 0004 00AF     		add	r7, sp, #0
 179              	.LCFI8:
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 218:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 219:../Generated_Code/TU1.c ****   TPM_PDD_InitializeCounter(TPM1_BASE_PTR);
 182              		.loc 1 219 0
 183 0008 034B     		ldr	r3, .L10
 184 000a 0022     		mov	r2, #0
 185 000c 5A60     		str	r2, [r3, #4]
 220:../Generated_Code/TU1.c ****   return ERR_OK;                       /* OK */
 186              		.loc 1 220 0
 187 000e 0023     		mov	r3, #0
 221:../Generated_Code/TU1.c **** }
 188              		.loc 1 221 0
 189 0010 181C     		mov	r0, r3
 190 0012 BD46     		mov	sp, r7
 191 0014 02B0     		add	sp, sp, #8
 192              		@ sp needed for prologue
 193 0016 80BD     		pop	{r7, pc}
 194              	.L11:
 195              		.align	2
 196              	.L10:
 197 0018 00900340 		.word	1073975296
 198              		.cfi_endproc
 199              	.LFE2:
 201              		.section	.text.TU1_GetCounterValue,"ax",%progbits
 202              		.align	2
 203              		.global	TU1_GetCounterValue
 204              		.code	16
 205              		.thumb_func
 207              	TU1_GetCounterValue:
 208              	.LFB3:
 222:../Generated_Code/TU1.c **** 
 223:../Generated_Code/TU1.c **** /*
 224:../Generated_Code/TU1.c **** ** ===================================================================
 225:../Generated_Code/TU1.c **** **     Method      :  TU1_GetCounterValue (component TimerUnit_LDD)
 226:../Generated_Code/TU1.c **** */
 227:../Generated_Code/TU1.c **** /*!
 228:../Generated_Code/TU1.c **** **     @brief
 229:../Generated_Code/TU1.c **** **         Returns the content of counter register. This method can be
 230:../Generated_Code/TU1.c **** **         used both if counter is enabled and if counter is disabled.
 231:../Generated_Code/TU1.c **** **         The method is not available if HW doesn't allow reading of
 232:../Generated_Code/TU1.c **** **         the counter.
 233:../Generated_Code/TU1.c **** **     @param
 234:../Generated_Code/TU1.c **** **         DeviceDataPtr   - Device data structure
 235:../Generated_Code/TU1.c **** **                           pointer returned by [Init] method.
 236:../Generated_Code/TU1.c **** **     @return
 237:../Generated_Code/TU1.c **** **                         - Counter value (number of counted ticks).
 238:../Generated_Code/TU1.c **** */
 239:../Generated_Code/TU1.c **** /* ===================================================================*/
 240:../Generated_Code/TU1.c **** TU1_TValueType TU1_GetCounterValue(LDD_TDeviceData *DeviceDataPtr)
 241:../Generated_Code/TU1.c **** {
 209              		.loc 1 241 0
 210              		.cfi_startproc
 211 0000 80B5     		push	{r7, lr}
 212              	.LCFI9:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 14, -4
 216 0002 82B0     		sub	sp, sp, #8
 217              	.LCFI10:
 218              		.cfi_def_cfa_offset 16
 219 0004 00AF     		add	r7, sp, #0
 220              	.LCFI11:
 221              		.cfi_def_cfa_register 7
 222 0006 7860     		str	r0, [r7, #4]
 242:../Generated_Code/TU1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 243:../Generated_Code/TU1.c ****   return (TU1_TValueType)TPM_PDD_ReadCounterReg(TPM1_BASE_PTR);
 223              		.loc 1 243 0
 224 0008 024B     		ldr	r3, .L14
 225 000a 5B68     		ldr	r3, [r3, #4]
 244:../Generated_Code/TU1.c **** }
 226              		.loc 1 244 0
 227 000c 181C     		mov	r0, r3
 228 000e BD46     		mov	sp, r7
 229 0010 02B0     		add	sp, sp, #8
 230              		@ sp needed for prologue
 231 0012 80BD     		pop	{r7, pc}
 232              	.L15:
 233              		.align	2
 234              	.L14:
 235 0014 00900340 		.word	1073975296
 236              		.cfi_endproc
 237              	.LFE3:
 239              		.text
 240              	.Letext0:
 241              		.file 2 "C:/Freescale/CW MCU v10.6/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 242              		.file 3 "../Generated_Code/PE_Types.h"
 243              		.file 4 "C:/Freescale/CW MCU v10.6/MCU/ProcessorExpert/lib/Kinetis/iofiles/MKL25Z4.h"
 244              		.file 5 "../Generated_Code/TU1.h"
DEFINED SYMBOLS
                            *ABS*:00000000 TU1.c
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:24     .text.TU1_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:29     .text.TU1_Init:00000000 TU1_Init
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:102    .text.TU1_Init:00000058 $d
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:112    .text.TU1_Deinit:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:117    .text.TU1_Deinit:00000000 TU1_Deinit
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:155    .text.TU1_Deinit:00000024 $d
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:161    .text.TU1_ResetCounter:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:166    .text.TU1_ResetCounter:00000000 TU1_ResetCounter
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:197    .text.TU1_ResetCounter:00000018 $d
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:202    .text.TU1_GetCounterValue:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:207    .text.TU1_GetCounterValue:00000000 TU1_GetCounterValue
C:\Users\Student\AppData\Local\Temp\ccdkdB2D.s:235    .text.TU1_GetCounterValue:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
